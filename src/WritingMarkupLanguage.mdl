import {KnowledgeLanguage} from './KnowledgeLanguage'

# Writing Markup Language
Writing Markup Language (WML) might be an extension of HTML that lets a developer separate the content from the style of the text and use machine learning language models to style the text.

In essence, it is an extension of the CSS and HTML.
* HTML might have additional tags for specifying the content and it might have certain in-built functions
* CSS might have additional properties allowing the developer to specify the tone of the text, the emphasis, what model is being used, etc.

This is one example —
```html
<script>
</script>

<body>
	<h1 class="aggressive">Bitcoin is the best money</h1>
	<p>{expand('Money has five key properties'}</p>
	<p>{expand('Bitcoin perfects the properties of money')}</p>
	<p>{expand('Bitcoin is the best Money')}</p>
</body>

<style>
	body {
		.model-formality: informal;
	}

	.aggresive {
		model-tone: aggressive;
	}
</style>

```

Engineering-wise, WML might be better suited as a framework sitting on top HTML, like Svelte. It would be nearly impossible to change the HTML standard and it wouldn’t make much sense — it performs its job very well.

Even without many built-ins and a knowledge layer, a language model might be able to extract content from author’s style and apply new style as well as pack enough *implicit* knowledge from learning on the web.

Basic built-ins such as `expand` or `argue` could simply be an interface to GPT-3 language model and the CSS might be use to set the parameters of the model —
```
// Specify series of logical statements
argue([
	'Money has five key properties: ...',
	'Bitcoin has the best properties of money',
	'Bitcoin is the best money',
])

// -> output: 3 paragraphs depending on the style...
// ... formality
// ... language
// ... affect
// ... succintness

```

But the full power of WML would come from integrating {KnowledgeLanguage}, which would allow a developer to specify existing knowledge libraries for the ML model to work with or define our own custom [[Knowledge library]].

